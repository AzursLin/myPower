<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.hctek.dao.UserElectricityMapper" >
  <resultMap id="BaseResultMap" type="com.hctek.model.UserElectricity" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="user_id" property="userId" jdbcType="VARCHAR" />
    <result column="user_read" property="userRead" jdbcType="INTEGER" />
    <result column="money" property="money" jdbcType="INTEGER" />
    <result column="create_date" property="createDate" jdbcType="DATE" />
    <result column="pay" property="pay" jdbcType="INTEGER" />
    <result column="user_nickname" property="userNickname" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, user_id, userRead, money, create_date, pay
  </sql>

  <select id="getAll" resultMap="BaseResultMap" parameterType="com.hctek.model.UserElectricity" >
    select *
    from user_electricity ue LEFT JOIN user u ON ue.user_id = u.user_id
    <where>
      <if test="userId != null and userId != ''">
        and ue.user_id = #{userId}
      </if>
      <if test="userNickname != null and userNickname != ''">
        and u.user_nickname = #{userNickname}
      </if>
      <if test="pay != null and pay != ''">
        and ue.pay = #{pay}
      </if>
      <if test="startDate != null and startDate != ''">
        and ue.create_date BETWEEN #{startDate} AND #{endDate}
      </if>
    </where>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from user_electricity
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from user_electricity
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.hctek.model.UserElectricity" >
    insert into user_electricity ( user_id, user_read,
      money, create_date, pay
      )
    values ( #{userId,jdbcType=VARCHAR}, #{userRead,jdbcType=INTEGER},
      #{money,jdbcType=INTEGER}, #{createDate,jdbcType=DATE}, #{pay,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.hctek.model.UserElectricity" >
    insert into user_electricity
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="userId != null" >
        user_id,
      </if>
      <if test="userRead != null" >
        userRead,
      </if>
      <if test="money != null" >
        money,
      </if>
      <if test="createDate != null" >
        create_date,
      </if>
      <if test="pay != null" >
        pay,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="userId != null" >
        #{userId,jdbcType=VARCHAR},
      </if>
      <if test="userRead != null" >
        #{userRead,jdbcType=INTEGER},
      </if>
      <if test="money != null" >
        #{money,jdbcType=INTEGER},
      </if>
      <if test="createDate != null" >
        #{createDate,jdbcType=DATE},
      </if>
      <if test="pay != null" >
        #{pay,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.hctek.model.UserElectricity" >
    update user_electricity
    <set >
      <if test="userId != null" >
        user_id = #{userId,jdbcType=VARCHAR},
      </if>
      <if test="userRead != null" >
        user_read = #{userRead,jdbcType=INTEGER},
      </if>
      <if test="money != null" >
        money = #{money,jdbcType=INTEGER},
      </if>
      <if test="createDate != null" >
        create_date = #{createDate,jdbcType=DATE},
      </if>
      <if test="pay != null" >
        pay = #{pay,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.hctek.model.UserElectricity" >
    update user_electricity
    set user_id = #{userId,jdbcType=VARCHAR},
      user_read = #{userRead,jdbcType=INTEGER},
      money = #{money,jdbcType=INTEGER},
      create_date = #{createDate,jdbcType=DATE},
      pay = #{pay,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>