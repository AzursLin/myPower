<template>
  <section>
      <el-col :span="24" class="toolbar">
        <el-form :inline="true" :model="formInline" class="demo-form-inline">
          <el-button type="primary" @click="createCourse">发布课程</el-button>
          <span v-bind:style="{ fontSize: 17 + 'px' }">&#32筛选审核：</span>
            <el-select v-model="begin" placeholder="请选择" v-bind:style="{ width: 100 + 'px' }">
              <el-option
                v-for="item in beginOptions"
                :key="item.value"
                :label="item.label"
                :value="item.value">
              </el-option>
            </el-select>
            <el-button type="primary" @click="onSubmit">查询</el-button>
        </el-form>

      </el-col>
  <template>
  <el-table
    ref="singleTable"
    :data="tableData"
    highlight-current-row
    @current-change="handleCurrentChange"
    >
    <el-table-column type="index" width="60">
    </el-table-column>
    <el-table-column  label="发布时间"  width="110"  :formatter="createDateFormatter">
    </el-table-column>
    </el-table-column>
    <el-table-column property="courseName" label="课程名称" width="100">
    </el-table-column>
    <el-table-column property="msgRole" label="报名状态" width="100" :formatter="beginDateFormatter">
    </el-table-column>
    <el-table-column property="trainerName" label="教练" width="100">
    </el-table-column>
    <el-table-column property="hasJoinNum" label="报名人数"  width="130">
    </el-table-column>
    <el-table-column  label="课程时间"  width="170" :formatter="durationDateFormatter">
    </el-table-column>
    <el-table-column  label="审核验证">
      <template scope="scope">
        <span >
        <el-button
          @click.native.prevent="OpenChangeCourseDialog(scope.$index, '2')"
          type="text"
          size="small">
         详情或修改
        </el-button>
        <el-button
          @click.native.prevent="OpenChangeCourseDialog(scope.$index, '1')"
          type="text"
          size="small">
          删除
        </el-button>
        </span>
    </template>
    </el-table-column>
  </el-table>
  </template>
  <el-col :span="24" class="toolbar">
    <el-pagination layout="prev, pager, next" @current-change="pageChange" :current-page.sync="pageNum"
                   :page-size=pageSize :total="total" style="float:right;">
    </el-pagination>
  </el-col>

    <el-dialog
      title="课程信息"
      :visible.sync="changeCourseDialog"
      size="small">
      <el-form ref="setCourseForm" :model="setCourseForm" label-width=80px>
        <el-form-item >
          <el-upload
            class="avatar-uploader"
            :action="uploadURL"
            :show-file-list="false"
            :data = "uploadData"
            :on-success	="uploadCoursePicSuccess">
            <img  v-if="setCourseForm.courseLogo" :src="setCourseForm.courseLogo" v-bind:style="{ width: 342+'px',height: 130+'px'}"/>
            <i v-else class="el-icon-plus avatar-uploader-icon"></i>
          </el-upload>
        </el-form-item>
        <el-form-item label="课程名称">
          <el-col :span="11">
          <el-input v-model="setCourseForm.courseName"></el-input>
          </el-col>
        </el-form-item>
        <el-form-item label="课程时间"  label-width=80px>
          <el-col :span="7">
            <el-date-picker
              v-model="setCourseForm.courseStartDate"
              type="datetime"
              placeholder="选择开始时间"  style="width: 100%;">
            </el-date-picker>
          </el-col>
          <el-col class="line" :span="1">&nbsp;&nbsp;—&nbsp;</el-col>
          <el-col :span="7">
            <el-date-picker
              v-model="setCourseForm.courseEndDate"
              type="datetime"
              placeholder="选择结束时间" :picker-options="courseEndDatePickerOptions"  style="width: 100%;">
            </el-date-picker>
            <el-col class="line" :span="9"></el-col>
          </el-col>
        </el-form-item>
        <el-form-item label="教练">
          <el-select v-model="setCourseForm.trainerUserId" placeholder="请选择教练">
            <el-option
              v-for="item in selectTrainerOptions"
              :key="item.value"
              :label="item.label"
              :value="item.value">
            </el-option>
          </el-select>
        </el-form-item>
        <el-form-item label="人数上限">
          <el-col :span="3">
            <template>
              <el-input-number v-model="setCourseForm.courseNummber" :min="1"></el-input-number>
            </template>
          </el-col>
        </el-form-item>
        <el-form-item label="简    介">
          <el-input type="textarea" v-model="setCourseForm.courseSummary"></el-input>
        </el-form-item>
        <el-form-item>
        <el-upload
          class="avatar-uploader2"
          :action="uploadURL"
          list-type="picture-card"
          :data = "uploadData"
          :on-success="uploadCourseShowImageSuccess"
          :file-list="fileList"
          :on-remove="uploadCourseShowImageRemove"
          :before-upload="beforeCourseShowImageUpload">
          <i class="el-icon-plus"></i>
        </el-upload>
        </el-form-item>
        <el-form-item>（注：详情图片最多上传三张）
        </el-form-item>
        <el-button size="large" @click="setCourse" >
          <span>确认</span>
        </el-button>
      </el-form>
    </el-dialog>
  </section>
</template>




<script>
  import { getClubCourse,setMemberInfo,setClubCourse,getClubUser,picBaseurl } from '../api/api';
export default {
  name: 'hello',
  data () {
    return {
      beginOptions: [{
        value: '0',
        label: '全部'
      }, {
        value: '1',
        label: '进行中'
      }, {
        value: '2',
        label: '已结束'
      }],
      selectTrainerOptions: [],
      courseEndDatePickerOptions: {
        disabledDate: (time) => {
          let beginDateVal = this.setCourseForm.courseStartDate;
          if (beginDateVal) {
            return time.getTime() < beginDateVal;
          }
        }
      },
      tableData:[],
      setCourseForm:{
        courseId:'',
        courseName:'',
        courseLogo:'',
        trainerUserId: '',
        trainerName:'',
        courseSummary:'',
        courseNummber: '',
        courseStartDate:'',
        courseEndDate:'',
        courseShowImage:'',
        mode:''
      },
      pageNum:1,
      pageSize:8,
      total:0,
      formInline: {
        userName: '',
      },
      begin:'0',
      changeReview: 0,
      changeCourseDialog:false,
      uploadURL:picBaseurl+"cmsClub!uploadPic.action?appPhaseII=Club",
      uploadData:{"employeeId":JSON.parse(sessionStorage.getItem('employeeId'))},
      setReviewValue:0,
      courseShowImageCt:0,
      fileList: []
    }
  },
  methods: {
    handleCurrentChange(val) {
      this.currentRow = val;
    },
    beginDateFormatter(row, column) {
      var disp;
      var courseStartDate = row.courseStartDate.time;
      var nowDate = new Date;
      if(courseStartDate > nowDate.getTime()) {
        disp = '进行中'
      }else{
        disp = '以结束'
      }
      return disp;
    },
    createDateFormatter(row, column) {
      var date = row.createDate;
      return this.formatGetDate(date);
    },
    durationDateFormatter(row, column) {
      var courseStartDate = this.formatGetDate(row.courseStartDate);
      var courseEndDate = this.formatGetDate(row.courseEndDate);
      return courseStartDate+'\n'+courseEndDate;
    },
    pageChange(val) {
      this.tableData  = [];
      this.pageNum = val;
      let para = {
        pageNum: this.pageNum,
        pageSize: this.pageSize,
        begin:this.begin
      };
      getClubCourse(para).then((res) => {
        if(res.data.ret === 200) {
          this.tableData = res.data.msg;
          this.total = res.data.total;

        } else if(res.data.ret === 400){
          sessionStorage.removeItem('userName');
          sessionStorage.removeItem('code');
          _this.$router.push('/');
        }
      });
    },
    onSubmit() {
      this.pageChange(1);
    },
    OpenChangeCourseDialog(index,mode) {
        if(mode === '1') {
          this.setCourseForm.courseId = this.tableData[index].courseId;
          this.setCourseForm.mode = mode;
          this.$confirm('是否删除此课程?', '提示', {
            confirmButtonText: '确定',
            cancelButtonText: '取消',
            type: 'warning'
          }).then(() => {
            this.setCourse();
          }).catch(() => {

          });
        } else {
          this.getCourseTrainer();
          this.setCourseForm.mode = mode;
          this.setCourseForm.courseId = this.tableData[index].courseId;
          this.setCourseForm.courseName = this.tableData[index].courseName;
          this.setCourseForm.courseLogo = picBaseurl+this.tableData[index].courseLogo;
          this.setCourseForm.trainerUserId = this.tableData[index].trainerUserId;
          this.setCourseForm.trainerName = this.tableData[index].trainerName;
          this.setCourseForm.courseSummary = this.tableData[index].courseSummary;
          this.setCourseForm.courseNummber = this.tableData[index].courseNummber;
          this.setCourseForm.courseStartDate = new Date(this.tableData[index].courseStartDate.time);
          this.setCourseForm.courseEndDate = new Date(this.tableData[index].courseEndDate.time);
          this.setCourseForm.courseShowImage = "";
          this.fileList =[];
          var imgSplit = this.tableData[index].courseShowImage.split(",");
          for(var i=0;i<imgSplit.length;i++) {
            if(imgSplit[i] !== '') {
              this.fileList.push({name:i,url:picBaseurl+imgSplit[i]});
            }
          }
          this.changeCourseDialog = true;
        }
    },
    setCourse(){
      this.setCourseForm.courseShowImage = '';
      for (var i = 0; i < this.fileList.length; i++) {
        this.setCourseForm.courseShowImage += ","+this.fileList[i].url;
      };
      this.setCourseForm.courseStartDate = Number(this.setCourseForm.courseStartDate);
      this.setCourseForm.courseEndDate = Number(this.setCourseForm.courseEndDate);
      setClubCourse(this.setCourseForm).then((res) => {
        if(res.data.ret === 200) {
          this.$message({
            message: res.data.msg[0],
            type: 'info'
          });
          this.changeCourseDialog = false;
          this.pageChange(this.pageNum);
        } else if(res.data.ret === 500){
          this.$message({
            message: res.data.msg[0],
            type: 'error'
          });
        }
      });
    },
    formatGetDate(date){
      var formatValue;
      if (isEmptyObject(date)) {
        formatValue = "";
      } else {
        formatValue = (date.year+1900)
          + "-" + dataLeftCompleting(date.month + 1)
          + "-" + dataLeftCompleting(date.date)
          + " " + dataLeftCompleting(date.hours)
          + ":" + dataLeftCompleting(date.minutes)
          + ":" + dataLeftCompleting(date.seconds);
      }
      return formatValue;
    },
    createCourse(){
      this.fileList = [];
      for(var key in this.setCourseForm){
        this.setCourseForm[key] = '';
      }
      this.setCourseForm.mode = "0";
      this.getCourseTrainer();
      this.changeCourseDialog = true;
    },
    uploadCoursePicSuccess(res, file){
      this.setCourseForm.courseLogo =  picBaseurl+res.msg[0];
      file.url = this.setCourseForm.courseLogo;
    },
    uploadCourseShowImageSuccess(res, file,fileList){
      file.url = picBaseurl+res.msg[0];
      this.fileList = fileList;
    },
    beforeCourseShowImageUpload(file){
      if(this.fileList.length === 3) {
        this.$message({
          message: "上传图片不能超过3张",
          type: 'error'
        });
          return false;
      }
    },
    uploadCourseShowImageRemove(file, fileList){
      this.fileList = fileList;
    },
    getCourseTrainer(){
      let para = {
        pageNum:1,
        pageSize: 1000,
        userRole:1,
        review:0
      };
      getClubUser(para).then((res) => {
        if(res.data.ret === 200) {
          console.log(res.data.msg);
          var msg = res.data.msg;
          this.selectTrainerOptions = [];
          for(var i=0;i<msg.length;i++) {
            if(msg[i].clubRole === 1) {
              this.selectTrainerOptions.push({value:msg[i].userId,label:msg[i].userName});
            }
          }
        } else if(res.data.ret === 500){
          this.$message({
            message: '教练信息获取失败',
            type: 'error'
          });
        }
      });
    }
  },
  mounted() {
    let para = {
      pageNum: this.pageNum,
      pageSize: this.pageSize,
      begin:'0'
    };
    getClubCourse(para).then((res) => {
      if(res.data.ret === 200) {
        this.tableData = res.data.msg;
        this.total = res.data.total;
      } else if(res.data.ret === 500){
        this.$message({
          message: res.data.msg[0],
          type: 'error'
        });
      }
    });
  }
}

  function dataLeftCompleting(value){
    return parseInt(value) < 10 ? "0" + value : value;
  }

  function isEmptyObject(obj) {
    for (var i in obj) {
      return false
    }
    return true
  }

</script>
<style>
  .avatar-uploader2 .el-upload {
    border: 1px dashed #d9d9d9;
    border-radius: 6px;
    cursor: pointer;
    position: relative;
    overflow: hidden;
  }
  .avatar-uploader2 .el-upload:hover {
    border-color: #409EFF;
  }
  .el-upload-list--picture-card .el-upload-list__item  {
    width: 108px;
    height: 108px;
  }
  .el-upload el-upload--picture-card {
    font-size: 28px;
    color: #8c939d;
    width: 108px;
    height: 108px;
    line-height: 108px;
    text-align: center;
  }
</style>



