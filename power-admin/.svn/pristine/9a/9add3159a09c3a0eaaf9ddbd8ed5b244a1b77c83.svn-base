<template>
  <section>
      <el-col :span="24" class="toolbar">
        <el-form :inline="true" :model="formInline" class="demo-form-inline">
          <el-button type="primary" @click="pageChange(1)">刷新消息</el-button>
          <span v-bind:style="{ fontSize: 17 + 'px' }">&#32筛选审核：</span>
            <el-select v-model="review" placeholder="请选择" v-bind:style="{ width: 100 + 'px' }">
              <el-option
                v-for="item in reviewOptions"
                :key="item.value"
                :label="item.label"
                :value="item.value">
              </el-option>
            </el-select>
            <el-button type="primary" @click="onSubmit">查询</el-button>
        </el-form-item>
        </el-form>

      </el-col>
  <template>
  <el-table
    ref="singleTable"
    :data="tableData"
    highlight-current-row
    @current-change="handleCurrentChange"
    >
    <el-table-column type="index" width="60">
    </el-table-column>
    <el-table-column  label="申请时间"  width="110"  :formatter="askDateFormatter">
    </el-table-column>
    <el-table-column label="头像" width="80">
      <template scope="scope">
      <img :src="scope.row.userLogo" v-bind:style="{ width: 100+'%',height: 100+'%'}"/>
      </template>
    </el-table-column>
    </el-table-column>
    <el-table-column property="userName" label="用户名" width="100">
    </el-table-column>
    <el-table-column property="msgRole" label="身份" width="80" :formatter="roleFormatter">
    </el-table-column>
    <el-table-column property="msgName" label="真实姓名" width="100">
    </el-table-column>
    <el-table-column property="msgPhone" label="手机号码"  width="130">
    </el-table-column>
    <el-table-column property="msgMember" label="会员号"  width="130">
    </el-table-column>
    <el-table-column  label="审核时间"  width="110"  :formatter="updateDateFormatter">
    </el-table-column>
    <el-table-column  label="审核验证">
      <template scope="scope">
        <span  v-if="scope.row.msgReview === 0">
        <el-button
          @click.native.prevent="OpenChangeReviewDialog(scope.$index, 1)"
          type="text"
          size="small">
         通过
        </el-button>
        <el-button
          @click.native.prevent="OpenChangeReviewDialog(scope.$index, 2)"
          type="text"
          size="small">
          驳回
        </el-button>
        </span>
        <span  v-if="scope.row.msgReview === 1">
          已通过
        </span>
        <span  v-if="scope.row.msgReview === 2">
          已驳回
        </span>
    </template>
    </el-table-column>
  </el-table>
  </template>
  <el-col :span="24" class="toolbar">
    <el-pagination layout="prev, pager, next" @current-change="pageChange" :current-page.sync="pageNum"
                   :page-size=pageSize :total="total" style="float:right;">
    </el-pagination>
  </el-col>

    <el-dialog
      title="信息确认"
      :visible.sync="changeReviewDialog"
      size="tiny">
      <table  width=100%>
        <tr>提交时间:{{setForm.askDate}}</tr>
        <tr>用户:{{setForm.userName}}</tr>
        <tr><td></td></tr>
        <tr><td></td></tr>
        <tr>提交审核信息:</tr>
        <tr>真实姓名 : {{setForm.userRealName}}</tr>
        <tr>手机号码 : {{setForm.userPhone}}</tr>
        <tr>会员号 : {{setForm.memberNumber}}</tr>
        <tr></tr>
        <tr></tr>
        <tr>信息符合，确认通过。/信息不符合，给予驳回</tr>
        <tr>
          <td colspan=2 align=center><el-button size="large" @click="setReview" >
           <span v-if="this.setReviewValue === 1">审核通过</span>
            <span v-if="this.setReviewValue === 2">审核驳回</span>
          </el-button></td>
        </tr>
      </table>
      <span>
      </span>
    </el-dialog>

  </section>
</template>




<script>
  import { getClubReview,setMemberInfo,setClubReview,picBaseurl } from '../api/api';
export default {
  name: 'hello',
  data () {
    return {
      reviewOptions: [{
        value: '1000',
        label: '全部'
      }, {
        value: '0',
        label: '未审核'
      }, {
        value: '1',
        label: '已审核'
      }, {
        value: '2',
        label: '已驳回'
      }],
      tableData:[],
      setForm:{
        askDate:'',
        userId:'',
        userName:'',
        userRealName: '',
        userPhone:'',
        clubRole: 1000,
        memberNumber:''
      },
      pageNum:1,
      pageSize:8,
      total:0,
      formInline: {
        userName: '',
      },
      role:'1000',
      review:'1000',
      changeReview: 0,
      reviewShow:false,
      changeReviewDialog:false,
      setReviewValue:0
    }
  },
  methods: {
    handleCurrentChange(val) {
      this.currentRow = val;
    },
    roleFormatter(row, column) {
      var role;
      if(row.msgRole === 0) {
        role = '管理员'
      }else if(row.msgRole === 1){
        role = '教练'
      }else if(row.msgRole === 10){
        role = '会员'
      }else if(row.msgRole === 11){
        role = '成员'
      }else {
        role = ''
      }
      return role;
    },
    askDateFormatter(row, column) {
      var date = row.msgAskDate;
      if (isEmptyObject(date)) {
        formatValue = "";
      } else {
        var formatValue = (date.year+1900)
          + "-" + dataLeftCompleting(date.month + 1)
          + "-" + dataLeftCompleting(date.date)
          + " " + dataLeftCompleting(date.hours)
          + ":" + dataLeftCompleting(date.minutes)
          + ":" + dataLeftCompleting(date.seconds);
      }
      return formatValue;
    },
    updateDateFormatter(row, column) {
      var date = row.msgUpdateDate;
      return this.formatGetDate(date);
    },
    pageChange(val) {
      this.tableData  = [];
      this.pageNum = val;
      let para = {
        pageNum: this.pageNum,
        pageSize: this.pageSize,
        review:this.review
      };
      getClubReview(para).then((res) => {
        if(res.data.ret === 200) {
          this.tableData = res.data.msg;
          for(var i = 0;i<this.tableData.length;i++) {
            this.tableData[i].userLogo = picBaseurl+this.tableData[i].userLogo;
          }
          this.total = res.data.total;

        } else if(res.data.ret === 400){
          sessionStorage.removeItem('userName');
          sessionStorage.removeItem('code');
          _this.$router.push('/');
        }
      });
    },
    onSubmit() {
      this.pageChange(1);
    },
    OpenChangeReviewDialog(index,review) {
      this.setReviewValue = review;
      this.setForm.userId = this.tableData[index].userId;
      this.setForm.askDate = this.formatGetDate(this.tableData[index].msgAskDate);
      this.setForm.userName = this.tableData[index].userName;
      this.setForm.userRealName = this.tableData[index].msgName;
      this.setForm.userPhone = this.tableData[index].msgPhone;
      this.setForm.memberNumber = this.tableData[index].msgMember;
      this.changeReviewDialog = true;
    },
    setReview(){
      let para = {
        userId:this.setForm.userId,
        review:this.setReviewValue
      };
      setClubReview(para).then((res) => {
        if(res.data.ret === 200) {
          this.$message({
            message: res.data.msg[0],
            type: 'info'
          });
          this.changeReviewDialog = false;
          this.pageChange(this.pageNum);
        } else if(res.data.ret === 500){
          this.$message({
            message: res.data.msg[0],
            type: 'error'
          });
        }
      });
    },
    formatGetDate(date){
      var formatValue;
      if (isEmptyObject(date)) {
        formatValue = "";
      } else {
        formatValue = (date.year+1900)
          + "-" + dataLeftCompleting(date.month + 1)
          + "-" + dataLeftCompleting(date.date)
          + " " + dataLeftCompleting(date.hours)
          + ":" + dataLeftCompleting(date.minutes)
          + ":" + dataLeftCompleting(date.seconds);
      }
      return formatValue;
    }
  },
  mounted() {
    let para = {
/*      code : JSON.parse(sessionStorage.getItem('code')),
      userId: JSON.parse(sessionStorage.getItem('userId')),*/
      pageNum: this.pageNum,
      pageSize: this.pageSize,
      review:'1000'
    };
    getClubReview(para).then((res) => {
      if(res.data.ret === 200) {
        this.tableData = res.data.msg;
        for(var i = 0;i<this.tableData.length;i++) {
          this.tableData[i].userLogo = picBaseurl+this.tableData[i].userLogo;
        }

        this.total = res.data.total;
      } else if(res.data.ret === 500){
        this.$message({
          message: res.data.msg[0],
          type: 'error'
        });
      }
    });
  }
}

  function dataLeftCompleting(value){
    return parseInt(value) < 10 ? "0" + value : value;
  }

  function isEmptyObject(obj) {
    for (var i in obj) {
      return false
    }
    return true
  }
</script>



